[{"D:\\Shailesh_Personal\\New Learning\\GL\\cms\\cms\\cms-frontend\\src\\index.js":"1","D:\\Shailesh_Personal\\New Learning\\GL\\cms\\cms\\cms-frontend\\src\\App.js":"2","D:\\Shailesh_Personal\\New Learning\\GL\\cms\\cms\\cms-frontend\\src\\reportWebVitals.js":"3","D:\\Shailesh_Personal\\New Learning\\GL\\cms\\cms\\cms-frontend\\src\\components\\navbar\\navbar.js":"4","D:\\Shailesh_Personal\\New Learning\\GL\\cms\\cms\\cms-frontend\\src\\components\\cms\\addCustomer.jsx":"5","D:\\Shailesh_Personal\\New Learning\\GL\\cms\\cms\\cms-frontend\\src\\components\\cms\\editCustomet.jsx":"6","D:\\Shailesh_Personal\\New Learning\\GL\\cms\\cms\\cms-frontend\\src\\components\\cms\\customerlist.jsx":"7"},{"size":535,"mtime":1664858962000,"results":"8","hashOfConfig":"9"},{"size":821,"mtime":1665040714000,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1664858962000,"results":"11","hashOfConfig":"9"},{"size":546,"mtime":1664883764000,"results":"12","hashOfConfig":"9"},{"size":5064,"mtime":1665484246347,"results":"13","hashOfConfig":"9"},{"size":5768,"mtime":1665483839724,"results":"14","hashOfConfig":"9"},{"size":5085,"mtime":1665484546696,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ieijw2",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"D:\\Shailesh_Personal\\New Learning\\GL\\cms\\cms\\cms-frontend\\src\\index.js",[],[],"D:\\Shailesh_Personal\\New Learning\\GL\\cms\\cms\\cms-frontend\\src\\App.js",[],[],"D:\\Shailesh_Personal\\New Learning\\GL\\cms\\cms\\cms-frontend\\src\\reportWebVitals.js",[],[],"D:\\Shailesh_Personal\\New Learning\\GL\\cms\\cms\\cms-frontend\\src\\components\\navbar\\navbar.js",[],[],"D:\\Shailesh_Personal\\New Learning\\GL\\cms\\cms\\cms-frontend\\src\\components\\cms\\addCustomer.jsx",["38"],[],"D:\\Shailesh_Personal\\New Learning\\GL\\cms\\cms\\cms-frontend\\src\\components\\cms\\editCustomet.jsx",["39","40"],[],"D:\\Shailesh_Personal\\New Learning\\GL\\cms\\cms\\cms-frontend\\src\\components\\cms\\customerlist.jsx",["41","42"],[],"import React from 'react'\r\nimport { useEffect,useState } from 'react';\r\nimport axios from \"axios\";\r\nimport {Paper,Zoom,Container,Box,Grid,Typography,Button} from '@mui/material';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nconst headCells = [\r\n    { id: 'srno', label: 'S. No.', minWidth: 50,align: 'center' },\r\n    { id: 'srno', label: 'First Name', minWidth: 50,align: 'center' },\r\n    { id: 'srno', label: 'Last Name', minWidth: 50,align: 'center' },\r\n    { id: 'srno', label: 'Email', minWidth: 50,align: 'center' },\r\n    { id: 'srno', label: 'Action', minWidth: 50,align: 'center' }\r\n   \r\n]\r\n\r\nfunction EnhancedTableHead(props) {\r\n\r\n\r\n\r\n\r\n    return (\r\n      <TableHead className='theadbg border'>\r\n        <TableRow>\r\n          {/* <TableCell padding=\"checkbox\"> */}\r\n          {/* <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={rowCount > 0 && numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n              inputProps={{ 'aria-label': 'select all desserts' }}\r\n            /> */}\r\n          {/* </TableCell> */}\r\n          {headCells.map((headCell) => (\r\n            <TableCell style={{ color: '#6E6A76' }}\r\n              key={headCell.id}\r\n              padding={headCell.disablePadding ? 'none' : 'default'}\r\n            > {headCell.label}\r\n  \r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n  \r\n  EnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n  };\r\n  \r\n  \r\n  \r\n\r\n\r\nconst CustomerList = () => {\r\n\r\n\r\n  \r\n  const url = \"http://localhost:9111/api/v1/getAllCustomer\";\r\n\r\n    const [customerList, setCustomerList] = useState([]);\r\n\r\n    const onAddCustomer = () => {\r\n        // history.push('./adduser');\r\n      window.open('./addCustomer','_self')\r\n    \r\n    }\r\n\r\n\r\n   \r\n\r\n\r\n  const onUpdateCustomer = async (id) =>{\r\n    window.open(`/updateCustomer/${id}`,'_self')\r\n  }\r\n\r\n    useEffect(()=>{\r\n        const fetchAllUser = async()=>{\r\n            try{\r\n                const res = await axios.get(url);\r\n                setCustomerList(res.data)\r\n                // console.log(res);\r\n\r\n            }catch(err){\r\n                console.log(err)\r\n            }\r\n        }\r\n\r\n\r\n        fetchAllUser();\r\n    },[]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const onhandleDelete= async (id)=>{\r\n\r\n\r\n\r\n      try{\r\n        await axios.delete(\"http://localhost:9111/api/v1/\"+id);\r\n        alert('Customer Deleted Successfully')\r\n        window.location.reload();\r\n      }catch(err){\r\n        console.log(err);\r\n      }\r\n    }\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n<Container>\r\n        <Box sx={{ my: 2 }}>\r\n      \r\n      <Paper elevation={3} style={{marginTop:\"30px\"}}>\r\n               \r\n                <Grid xs={12} container direction=\"row\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n\r\n                <Grid xs={12} style={{padding:\"12px\"}}>\r\n\r\n                <Button variant=\"contained\" color=\"primary\" onClick={onAddCustomer}>\r\n                + Add Customer\r\n                </Button>\r\n                </Grid>\r\n\r\n                <Grid xs={12} style={{padding:\"12px\",marginTop:\"6px\"}}>\r\n                    <Typography>\r\n                        Customer List\r\n                    </Typography>\r\n\r\n\r\n        <TableContainer >\r\n\r\n<Table >\r\n\r\n\r\n  <EnhancedTableHead />\r\n\r\n\r\n  <TableBody className='border'>\r\n\r\n    {\r\n      customerList && customerList.length > 0 ? customerList.map((user, index) => (\r\n        <TableRow\r\n          hover\r\n          onClick={(event) =>(event, 'user')}\r\n          role=\"checkbox\"\r\n          tabIndex={-1}\r\n          key={user.id}\r\n        >\r\n\r\n          <TableCell>{index + 1}</TableCell>\r\n          <TableCell>{user.firstName}</TableCell>\r\n          <TableCell>{user.lastName}</TableCell>\r\n          <TableCell>{user.email}</TableCell>\r\n          <TableCell>\r\n            <Button\r\n            onClick={(event)=>onUpdateCustomer(user.id)}\r\n            >\r\n                Update\r\n            </Button>| \r\n            <Button\r\n            onClick={()=>{if(window.confirm('Are you sure to delete this data?')){onhandleDelete(user.id);}}}>\r\n                Delete\r\n            </Button>\r\n        </TableCell>\r\n\r\n        </TableRow>\r\n      ))\r\n        : \"\"}\r\n\r\n  </TableBody>\r\n\r\n</Table>\r\n\r\n\r\n\r\n\r\n</TableContainer>\r\n\r\n\r\n                    \r\n\r\n\r\n\r\n\r\n                </Grid>\r\n                \r\n                </Grid>\r\n        </Paper>\r\n        </Box>\r\n        </Container>\r\n        \r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomerList;",{"ruleId":"43","severity":1,"message":"44","line":2,"column":17,"nodeType":"45","messageId":"46","endLine":2,"endColumn":21},{"ruleId":"43","severity":1,"message":"44","line":2,"column":17,"nodeType":"45","messageId":"46","endLine":2,"endColumn":21},{"ruleId":"47","severity":1,"message":"48","line":64,"column":7,"nodeType":"49","endLine":64,"endColumn":9,"suggestions":"50"},{"ruleId":"43","severity":1,"message":"44","line":4,"column":15,"nodeType":"45","messageId":"46","endLine":4,"endColumn":19},{"ruleId":"51","severity":1,"message":"52","line":161,"column":36,"nodeType":"53","messageId":"54","endLine":161,"endColumn":37},"no-unused-vars","'Zoom' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'customerDetail' and 'url'. Either include them or remove the dependency array.","ArrayExpression",["55"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",{"desc":"56","fix":"57"},"Update the dependencies array to be: [customerDetail, url]",{"range":"58","text":"59"},[1510,1512],"[customerDetail, url]"]